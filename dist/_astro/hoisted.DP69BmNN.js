import"./hoisted.DxfSxqbr.js";function p(e,t){if(!e.dataset.gameId)return;const a=e.querySelector(".update-history");if(a){if(!t||t.length===0){a.style.display="none";return}a.style.display="block",a.innerHTML=t.map(o=>`
      <div class="update-item">
        <div class="update-meta">
          <span class="update-user">${(o.user_email||"").split("@")[0]}</span>
          <span class="update-time">${new Date(o.created_at).toLocaleString()}</span>
        </div>
        <div class="update-text">${o.update_text}</div>
      </div>
    `).join("")}}async function m(e){try{const t=await fetch(`/api/games/${e}/updates`);if(!t.ok)throw new Error("Failed to load updates");const a=(await t.json()).results||[],o=document.querySelector(`.game-card[data-game-id="${e}"]`);o&&p(o,a)}catch(t){console.error("Error loading update history:",t)}}document.addEventListener("click",async e=>{const t=e.target;if(!t.classList.contains("update-button"))return;const r=t.closest(".game-card"),a=r.dataset.gameId,o=r.querySelectorAll(".team-score-input"),i=r.querySelector(".update-text-input"),g=i?.value.trim()||"",c=o[0].value,u=o[1].value,l=t.textContent;t.textContent="Updating...",t.setAttribute("disabled","true");try{const n=await fetch(`/api/games/${a}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({ehsFinal:parseInt(c,10),oppFinal:parseInt(u,10),updateText:g})}),s=await n.json();if(!n.ok)throw new Error(s.error||"Failed to update score");i&&(i.value="");const d=r.querySelectorAll(".team-score-input");d[0]&&d[1]&&(d[0].value=String(c),d[1].value=String(u)),s.updates&&s.updates.length>0?p(r,s.updates):await m(a),t.textContent="Updated!",setTimeout(()=>{t.textContent=l,t.removeAttribute("disabled")},2e3)}catch(n){console.error("Update Error:",n),t.textContent="Error!",t.style.backgroundColor="#d9534f",setTimeout(()=>{t.textContent=l,t.removeAttribute("disabled"),t.style.backgroundColor=""},3e3)}});document.addEventListener("DOMContentLoaded",()=>{document.body.dataset.page==="admin"&&document.querySelectorAll(".game-card").forEach(e=>{const t=e.dataset.gameId;t&&m(t)})});

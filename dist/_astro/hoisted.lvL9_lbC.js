import"./ScoreboardFilter.astro_astro_type_script_index_0_lang.B-y9ewqw.js";function y(r,e){if(!r.dataset.gameId)return;const n=r.querySelector(".update-history");if(n){if(!e||e.length===0){n.style.display="none";return}n.style.display="block",n.innerHTML=e.map(c=>`
      <div class="update-item">
        <div class="update-meta">
          <span class="update-user">${(c.user_email||"").split("@")[0]}</span>
        </div>
        <div class="update-row">
          <span class="update-text">${c.update_text}</span>
          <span class="update-timestamp">${new Date(c.created_at).toLocaleString()}</span>
        </div>
      </div>
    `).join("")}}async function S(r){try{const e=await fetch(`/api/games/${r}/updates`);if(!e.ok)throw new Error("Failed to load updates");const t=await e.json(),n=document.querySelector(`.game-card[data-game-id="${r}"]`);n&&y(n,t)}catch{}}document.addEventListener("click",async r=>{const e=r.target;if(!e.classList.contains("update-button"))return;const t=e.closest(".game-card"),n=t.dataset.gameId,c=t.querySelectorAll(".team-score-input"),u=t.querySelector(".update-text-input"),m=t.querySelector(".quarter-select"),k=m instanceof HTMLSelectElement?m:null,g=t.querySelector(".time-input"),v=g instanceof HTMLInputElement?g:null,I=t.querySelector(".game-over-checkbox"),C=u?.value.trim()||"",T=k?.value||"",w=v?.value.trim()||"",q=I?.checked||!1,l=c[0].value,d=c[1].value,h=e.textContent;e.textContent="Updating...",e.setAttribute("disabled","true");const p=o=>{document.cookie="auth=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;",localStorage.removeItem("authToken"),window.location.href=`/login?returnTo=${encodeURIComponent(window.location.pathname)}`},f=(()=>{const i=document.cookie.split("; ").find(s=>s.startsWith("auth="));if(i){const s=i.split("=")[1];return decodeURIComponent(s)}const a=localStorage.getItem("authToken");return a||null})();if(!f){p();return}try{const o={ehsScore:parseInt(l,10),oppScore:parseInt(d,10),updateText:C,qtr:T,timeInqtr:w};q&&(o.final=1,o.ehsFinal=parseInt(l,10),o.oppFinal=parseInt(d,10));const i=await fetch(`/api/games/${n}`,{method:"PATCH",credentials:"include",headers:{"Content-Type":"application/json",Authorization:`Bearer ${f.trim()}`},body:JSON.stringify(o)});let a;try{a=await i.json()}catch{throw new Error("Invalid JSON response from server")}if(!i.ok){if(i.status===401){e.textContent="Auth Error",e.style.backgroundColor="#d9534f",setTimeout(()=>{p("Session expired")},500);return}throw new Error(a.error||"Failed to update score")}u&&(u.value="");const s=t.querySelectorAll(".team-score-input");s[0]&&s[1]&&(s[0].value=String(l),s[1].value=String(d)),a.updates&&a.updates.length>0?y(t,a.updates):await S(n),e.textContent="Updated!",setTimeout(()=>{e.textContent=h,e.removeAttribute("disabled")},2e3)}catch(o){if(o instanceof Error&&o.message.includes("token")){p();return}e.textContent="Error!",e.style.backgroundColor="#d9534f",setTimeout(()=>{e.textContent=h,e.removeAttribute("disabled"),e.style.backgroundColor=""},3e3)}});document.addEventListener("DOMContentLoaded",()=>{document.querySelector('[data-page="admin"]')!==null&&document.querySelectorAll(".game-card").forEach(e=>{const t=e.dataset.gameId;t&&S(t)})});

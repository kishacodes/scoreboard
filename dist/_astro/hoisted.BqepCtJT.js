import"./hoisted.DxfSxqbr.js";function h(o,t){if(!o.dataset.gameId)return;const n=o.querySelector(".update-history");if(n){if(!t||t.length===0){n.style.display="none";return}n.style.display="block",n.innerHTML=t.map(a=>`
      <div class="update-item">
        <div class="update-meta">
          <span class="update-user">${(a.user_email||"").split("@")[0]}</span>
          <span class="update-time">${new Date(a.created_at).toLocaleString()}</span>
        </div>
        <div class="update-text">${a.update_text}</div>
      </div>
    `).join("")}}async function g(o){try{const t=await fetch(`/api/games/${o}/updates`);if(!t.ok)throw new Error("Failed to load updates");const n=(await t.json()).results||[],a=document.querySelector(`.game-card[data-game-id="${o}"]`);a&&h(a,n)}catch(t){console.error("Error loading update history:",t)}}document.addEventListener("click",async o=>{const t=o.target;if(!t.classList.contains("update-button"))return;const r=t.closest(".game-card"),n=r.dataset.gameId,a=r.querySelectorAll(".team-score-input"),c=r.querySelector(".update-text-input"),f=c?.value.trim()||"",u=a[0].value,l=a[1].value,p=t.textContent;t.textContent="Updating...",t.setAttribute("disabled","true");const d=e=>{console.error("Authentication error:",e),document.cookie="auth=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;",localStorage.removeItem("authToken"),window.location.href=`/login?returnTo=${encodeURIComponent(window.location.pathname)}`},m=(()=>{const e=document.cookie.match(/auth=([^;]+)/);return e?e[1]:localStorage.getItem("authToken")})();if(!m){d("No authentication token found");return}try{const e=await fetch(`/api/games/${n}`,{method:"PATCH",credentials:"include",headers:{"Content-Type":"application/json",Authorization:`Bearer ${m}`},body:JSON.stringify({ehsFinal:parseInt(u,10),oppFinal:parseInt(l,10),updateText:f})}),s=await e.json();if(!e.ok){if(e.status===401){d("Session expired");return}throw new Error(s.error||"Failed to update score")}c&&(c.value="");const i=r.querySelectorAll(".team-score-input");i[0]&&i[1]&&(i[0].value=String(u),i[1].value=String(l)),s.updates&&s.updates.length>0?h(r,s.updates):await g(n),t.textContent="Updated!",setTimeout(()=>{t.textContent=p,t.removeAttribute("disabled")},2e3)}catch(e){if(console.error("Update Error:",e),e instanceof Error&&e.message.includes("token")){d("Invalid session");return}t.textContent="Error!",t.style.backgroundColor="#d9534f",setTimeout(()=>{t.textContent=p,t.removeAttribute("disabled"),t.style.backgroundColor=""},3e3)}});document.addEventListener("DOMContentLoaded",()=>{document.body.dataset.page==="admin"&&document.querySelectorAll(".game-card").forEach(o=>{const t=o.dataset.gameId;t&&g(t)})});

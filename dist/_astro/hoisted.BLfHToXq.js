function p(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\"/g,"&quot;").replace(/'/g,"&#39;")}function l(e){if(!e)return new Date(NaN);if(/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}(?::\d{2})?$/.test(e)){const s=e.replace(" ","T"),a=e.length===16?`${s}:00Z`:`${s}Z`;return new Date(a)}return new Date(e)}function u(e){const t=l(e);return isNaN(t.getTime())?String(e||""):t.toLocaleString("en-US",{timeZone:"America/Chicago"})}document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".game-card[data-game-id]").forEach(e=>{const t=e,s=t.getAttribute("data-game-id"),a=t.querySelector(".updates-details");if(!a||!s)return;const n=t.querySelector(".updates-list"),d=t.querySelector(".updates-heading");a.addEventListener("toggle",async()=>{if(a.open&&a.getAttribute("data-loaded")!=="true")try{const r=await fetch(`/api/games/${s}/updates`),i=r.ok?await r.json():[];if(d&&(d.textContent=i.length>0?`Recent Updates (${i.length})`:"Recent Updates (0)"),!n)return;!i||i.length===0?n.innerHTML='<li class="update-item"><div class="update-row"><span class="update-text">No updates yet</span><span class="update-timestamp"></span></div></li>':n.innerHTML=i.map(c=>`<li class="update-item"><div class="update-row"><span class="update-text" title="${p(c.update_text)}">${p(c.update_text)}</span><span class="update-timestamp">${p(u(c.created_at))}</span></div></li>`).join(""),a.setAttribute("data-loaded","true")}catch{d&&(d.textContent="Recent Updates (0)"),n&&(n.innerHTML='<li class="update-item"><div class="update-row"><span class="update-text">No updates yet</span><span class="update-timestamp"></span></div></li>'),a.setAttribute("data-loaded","true")}})})});

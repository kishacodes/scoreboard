---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Login - Emerson Mavericks Football">
  <main class="container">
    <h1>Login</h1>
    <form id="login-form" class="login-form">
      <label for="email">Email</label>
      <input type="email" id="email" name="email" required autocomplete="username" />
      <label for="password">Password</label>
      <input type="password" id="password" name="password" required autocomplete="current-password" />
      <button type="submit">Login</button>
      <p id="login-error" class="error-message"></p>
    </form>
  </main>
</Layout>

<style>
  .container {
    max-width: 400px;
    margin: 3rem auto;
    padding: 2rem;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.07);
  }
  h1 {
    text-align: center;
    color: var(--navy-blue);
    margin-bottom: 2rem;
  }
  .login-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .login-form label {
    font-weight: 500;
  }
  .login-form input {
    padding: 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-size: 1rem;
  }
  .login-form button {
    padding: 0.75rem;
    background: var(--navy-blue);
    color: #fff;
    border: none;
    border-radius: 4px;
    font-size: 1.1rem;
    font-weight: bold;
    cursor: pointer;
    margin-top: 1rem;
  }
  .login-form button:hover {
    background: #003366;
  }
  .error-message {
    color: #d9534f;
    min-height: 1.5em;
    text-align: center;
    font-size: 0.95rem;
  }
</style>

<script>
  document.getElementById('login-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    const errorEl = document.getElementById('login-error');
    errorEl.textContent = '';
    const email = (document.getElementById('email') as HTMLInputElement).value;
    const password = (document.getElementById('password') as HTMLInputElement).value;
      try {
        const res = await fetch('/api/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include',  // Important for cookies
          body: JSON.stringify({ email, password })
        });
        
        if (res.ok) {
        // Get the auth token from the response cookies
        const cookies = document.cookie.split(';');
        const authCookie = cookies.find(c => c.trim().startsWith('auth='));
        const token = authCookie ? authCookie.split('=')[1] : null;
        
        // Store token in localStorage as fallback
        if (token) {
          localStorage.setItem('authToken', token);
        }
        
        // Check for returnTo URL
        const urlParams = new URLSearchParams(window.location.search);
        const returnTo = urlParams.get('returnTo') || '/admin';
        window.location.href = returnTo;
      } else {
        const data = await res.json().catch(() => ({}));
        const errorMessage = typeof data === 'object' && data !== null && 'error' in data && typeof data.error === 'string'
          ? data.error
          : 'Invalid login.';
        errorEl.textContent = errorMessage;  
      }
    } catch (error) {
      console.error('Login error:', error);
      errorEl.textContent = 'An error occurred during login. Please try again.';
    }
  });
</script>
